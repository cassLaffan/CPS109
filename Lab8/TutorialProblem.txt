'''
Write a function that takes two tuples as arguments.
Each tuple contains as its first element an integer and the second a string.
Compare the two tuples: whichever has the bigger first element has its
string written to a file. Make sure to open and close the file.

Example Input/Output:
>>> t1 = (4, "Shrek")
>>> t2 = (6, "Mrs. Fiona Charming")
>>> tuple_comparison_and_write(t1, t2)
>>> f.open("yourfilename.txt", "r") # Or whatever you name your file...
>>> print(f.read())
Mrs. Fiona Charming
>>> f.close()

*** Optional Bonus Question (NOT for marks - only do for interest if time!) ***

Note: Due to us assessing your assignments this week we will not be having a Teletubbies x [Winning Series] crossover (it will be moved to next week).

As you wait in your breakout room alone, you begin to tremble with fear. "What if I can't explain things properly?" "What if my TA is a meanie?"
These thoughts race through your head, until suddenly, they are replaced with one beautiful, central, overpowering thought:

"Recursive functions are like onions - they have layers!"

This thought races through your head, calling itself recursively over and over and over and over and...

Write a function called its_all_ogre_now that takes a file name as input, as well as an integer n, and overwrites the contents of the file
with the string "Recursive functions are like onions - they have layers!" repeated on a new line n times. There should not be a new blank line at the end.

Example Input/Output:
>>> f = open("DONKEY.txt", "w")
>>> f.write("You know what ELSE everybody likes? Parfaits!)
>>> f.close()
>>> its_all_ogre_now("DONKEY.txt", 6)
>>> f = open("DONKEY.txt", "r")
>>> print(f.read())
Recursive functions are like onions - they have layers!
Recursive functions are like onions - they have layers!
Recursive functions are like onions - they have layers!
Recursive functions are like onions - they have layers!
Recursive functions are like onions - they have layers!
Recursive functions are like onions - they have layers!
>>> f.close()
'''
